<?xml version="1.0" encoding="utf-8" ?>
<!-- 此配置文件提供所有的servie功能，所有的业务service必须使用此配置文件； 使用此配置文件的对象必须实现IAlbianService或者继承FreeAlbianService -->
<Services>
    <!-- Kernel ，这部分必须存在并且不要更改任何项，此部分是albianj的基础服务 -->
    <!--<Service Id="AlbianKernelService" Type="org.albianj.kernel.impl.KernelParserService
    <!--<Service Id="AlbianStorageService" Type="org.albianj.persistence.impl.storage.StorageParserService
    <!--<Service Id="AlbianDataRouterService" Type="org.albianj.persistence.impl.routing.DataRouterParserService
    <!--<Service Id="AlbianMappingService" Type="org.albianj.persistence.impl.mapping.MappingParserService
    <!--<Service Id="PersistenceService" Type="org.albianj.persistence.impl.service.PersistenceService
    <!--<Service Id="ThreadPoolService" Type="org.albianj.concurrent.impl.ThreadPoolService
    <!--<Service Id="SecurityService" Type="org.albianj.security.impl.SecurityService
    <!--<Service Id="DataAccessService" Type="org.albianj.persistence.impl.service.DataAccessService

    <!-- 使用rant进行标注的service必须要在这里配置所在的包，否则albianj不会加载 -->
    <Packages>
        <Package Path="Albian.Test.Services.Impl" Enable="true"></Package>
    </Packages>

    <Service Id="OrgUserService" Type="Albian.Test.Services.Impl.OrgUserService">
        <Properties>
            <Property Type="Ref" Name="da" Value="AlbianDataAccessService"/>
        </Properties>
    </Service>


    <!--<Service Id="AlbianRemoteIdService" Type="org.albianj.unid.service.impl.AlbianRemoteUNIDService" />-->
    <!-- 	<service Id="AlbianCachedService" Type="org.albianj.cached.impl.service.AlbianCachedService" />-->
    <!-- 	<service Id="AlbianConfigurtionService" Type="org.albianj.configurtion.impl.AlbianConfigurtionService" />  -->
    <!--  <service Id="TafcommService" Type="org.albianj.taf.service.impl.TAFcommService" /> -->

    <!--<Service Id="AlbianYdbService" Type="org.albianj.dfs.ydb.client.impl.service.AlbianYDBService" />-->


    <!--mvc service -->
    <!--
    <Service Id="AlbianMvcConfigurtionService" Type="org.albianj.mvc.config.impl.MVCConfigurtionService"/>
    <Service Id="AlbianFileUploadService" Type="org.albianj.mvc.service.impl.FileUploadService">
        <Properties>
            <Property Type="Ref" Name="HttpConfigurtion" Value="AlbianMvcConfigurtionService.HttpConfigurtion"/>
        </Properties>
    </Service>
    <Service Id="AlbianResourceService" Type="org.albianj.mvc.service.impl.ResourceService">
        <Properties>
            <Property Type="Ref" Name="HttpConfigurtion" Value="AlbianMvcConfigurtionService.HttpConfigurtion"/>
        </Properties>
    </Service>
    <Service Id="AlbianTemplateService" Type="org.albianj.mvc.service.impl.BeetlTemplateService">
        <Properties>
            <Property Type="Ref" Name="HttpConfigurtion" Value="AlbianMvcConfigurtionService.HttpConfigurtion"/>
        </Properties>
    </Service>

    <Service Id="AlbianBrushingService" Type="org.albianj.mvc.service.impl.BrushingService">
        <Properties>
            <Property Type="Ref" Name="HttpConfigurtion" Value="AlbianMvcConfigurtionService.HttpConfigurtion"/>
        </Properties>
        <Methods>
        //使用id和AlbianMethodProxyRant结合使用，主要是为了不配参数，当参数复杂的时候要弄死我
            <Method Id="testMethod" NonProxy="true" CallCountS="300" TimeoutMs="100">
                <Retry RetryTimes="3" DelayMs="100"></Retry>
                <Timing Enable="true" LogTagName="tagName"></Timing>
            </Method>
        </Methods>
    </Service>
  -->

</Services>