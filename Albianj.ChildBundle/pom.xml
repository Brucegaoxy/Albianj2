<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>Albianj</artifactId>
        <groupId>com.yuewen.nrzx.albianj</groupId>
        <version>2019081203-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>Albianj.ChildBundle</artifactId>
    <dependencies>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Kernel</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Security</artifactId>
            <version>${project.version}</version>

        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Security.Impl</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>

        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Persistence</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Persistence.Impl</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>

        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP-java7</artifactId>
            <version>2.4.12</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Restful.Impl</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>

        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Restful</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Yuewen.PPLogStat.Impl</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Yuewen.PPLogStat</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Loader</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.yuewen.nrzx.albianj</groupId>
            <artifactId>Albianj.Launcher</artifactId>
            <version>2019071301-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!--<plugin>-->
                <!--&lt;!&ndash; 指定maven编译的jdk版本,如果不指定,maven3默认用jdk 1.5 maven2默认用jdk1.3 &ndash;&gt;-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-compiler-plugin</artifactId>-->
                <!--<version>3.8.1</version>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash; 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中不能使用低版本jdk中不支持的语法)，会存在target不同于source的情况 &ndash;&gt;-->
                    <!--<source>1.7</source> &lt;!&ndash; 源代码使用的JDK版本 &ndash;&gt;-->
                    <!--<target>1.7</target> &lt;!&ndash; 需要生成的目标class文件的编译版本 &ndash;&gt;-->
                    <!--<encoding>UTF-8</encoding>&lt;!&ndash; 字符集编码 &ndash;&gt;-->
                    <!--<verbose>true</verbose>-->
                    <!--<debug>true</debug>-->
                    <!--<debuglevel>source</debuglevel>-->
                    <!--<showWarnings>true</showWarnings>-->
                    <!--<meminitial>128m</meminitial>&lt;!&ndash; 编译器使用的初始内存 &ndash;&gt;-->
                    <!--<maxmem>512m</maxmem>&lt;!&ndash; 编译器使用的最大内存 &ndash;&gt;-->
                    <!--<compilerArgument>-g</compilerArgument>&lt;!&ndash; 这个选项用来传递编译器自身不包含但是却支持的参数选项 &ndash;&gt;-->
                <!--</configuration>-->
            <!--</plugin>-->

            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-resources-plugin</artifactId>-->
                <!--<version>2.6</version>-->
                <!--<configuration>-->
                    <!--<encoding>UTF-8</encoding>&lt;!&ndash; 指定编码格式，否则在DOS下运行mvn命令时当发生文件资源copy时将使用系统默认使用GBK编码 &ndash;&gt;-->
                <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <outputDirectory>${project.build.directory}/bin</outputDirectory>
                    <!--<archive>-->
                        <!--<manifest>-->
                            <!--<addClasspath>false</addClasspath>-->
                            <!--<mainClass>Albian.Test.FrameworkMain</mainClass>-->
                        <!--</manifest>-->
                    <!--</archive>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--${project.build.directory} class的输出目录不做设置的话默认代表项目根目录的target目录；
                                也可以使用“自定义文件夹/自定义文件夹 例如：a/b”，也可以使用绝对路径如：“D:\test” -->
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <includeScope>runtime</includeScope>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>